{"version":3,"sources":["API_Data.js","components/ItemsPerPage.js","components/Pagination.js","App.js","index.js"],"names":["getPlanes","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","planes","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","apply","this","arguments","ItemsPerPage","perPage","onPerPageChange","react_default","createElement","value","onChange","name","classNames","require","Pagination","page","buttonsNumbers","paginationBtnClass","buttonNumber","pageNum","button","button--pagination","button--active","firstDotsClass","dots","hide","lastDotsClass","length","backClass","button--flip","isDisabled","nextClass","className","react_router_dom","to","concat","filter","index","buttons","map","i","key","App","state","arrivals","event","target","_this","props","history","push","temp","setState","body","arrival","_this2","react_router","path","exact","component","match","location","_match$params$pageId","params","pageId","_queryString$parse$pe","queryString","parse","search","perpage","elementsPerPage","elementsNumber","pageNumber","Math","ceil","Array","from","btn","getButtonsNumbers","filteredPages","flights","fromIndex","toIndex","flight","getFilteredPerPage","components_ItemsPerPage","getNumbersShownPages","ID","airline","en","components_Pagination","React","Component","AppWithRouter","withRouter","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.3f06a7f3.chunk.js","sourcesContent":["const getPlanes = async() => {\n  const url = 'https://api.iev.aero/api/flights/13-06-2019';\n  const planes = await fetch(url);\n\n  return planes.json();\n};\n\nexport default getPlanes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ItemsPerPage = ({ perPage, onPerPageChange }) => (\n  <div>\n    <h3>\n      items per Page:\n      {perPage}\n    </h3>\n\n    <select\n      value={perPage}\n      onChange={onPerPageChange}\n      name=\"perPage\"\n    >\n      <option value=\"3\">3</option>\n      <option value=\"5\">5</option>\n      <option value=\"10\">10</option>\n      <option value=\"20\">20</option>\n    </select>\n  </div>\n);\n\nItemsPerPage.propTypes = {\n  perPage: PropTypes.number.isRequired,\n  onPerPageChange: PropTypes.func.isRequired,\n};\n\nexport default ItemsPerPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst classNames = require('classnames');\n\nconst Pagination = ({ page, buttonsNumbers, perPage }) => {\n  const paginationBtnClass = (buttonNumber, pageNum) => (\n    classNames({\n      button: true,\n      'button--pagination': true,\n      'button--active': buttonNumber === pageNum,\n    }));\n\n  const firstDotsClass = classNames({\n    dots: true,\n    hide: page < 4,\n  });\n\n  const lastDotsClass = classNames({\n    dots: true,\n    hide: page > buttonsNumbers.length - 3,\n  });\n\n  const backClass = classNames({\n    button: true,\n    'button--flip': true,\n    isDisabled: page <= 1,\n  });\n\n  const nextClass = classNames({\n    button: true,\n    'button--flip': true,\n    isDisabled: page >= buttonsNumbers.length,\n  });\n\n  return (\n    <div className=\"Pagination\">\n      <NavLink\n        to={\n          page > 1\n            ? `/${page - 1}?perpage=${perPage}`\n            : `/${page}?perpage=${perPage}`\n        }\n        name=\"back\"\n        className={backClass}\n      >\n        {'<'}\n      </NavLink>\n\n      <ul className=\"pagination__list\">\n        <li>\n          <NavLink\n            to={`/${buttonsNumbers[0]}?perpage=${perPage}`}\n            name={buttonsNumbers[0]}\n            className={paginationBtnClass(buttonsNumbers[0], page)}\n          >\n            {buttonsNumbers[0]}\n          </NavLink>\n        </li>\n\n        <li className={firstDotsClass}>...</li>\n\n        {buttonsNumbers\n          .filter((buttonNumber, index, buttons) => (\n            index !== 0\n            && index !== buttons.length - 1\n            && (index + 1 === page\n            || index + 1 === page + 1\n            || index + 1 === page - 1)))\n          .map((buttonNumber, i, buttons) => (\n            <li key={buttonNumber}>\n              <NavLink\n                to={`/${buttonNumber}?perpage=${perPage}`}\n                name={buttonNumber}\n                className={paginationBtnClass(buttonNumber, page)}\n              >\n                {buttonNumber}\n              </NavLink>\n            </li>\n          ))}\n\n        <li className={lastDotsClass}>...</li>\n\n        <li>\n          <NavLink\n            to={\n              `/${buttonsNumbers[buttonsNumbers.length - 1]}?perpage=${perPage}`\n            }\n            name={buttonsNumbers[buttonsNumbers.length - 1]}\n            className={paginationBtnClass(\n              buttonsNumbers[buttonsNumbers.length - 1],\n              page,\n              buttonsNumbers.length\n            )}\n          >\n            {buttonsNumbers[buttonsNumbers.length - 1]}\n          </NavLink>\n        </li>\n      </ul>\n\n      <NavLink\n        to={\n          page <= buttonsNumbers.length - 1\n            ? `/${page + 1}?perpage=${perPage}`\n            : `/${page}?perpage=${perPage}`\n        }\n        name=\"next\"\n        className={nextClass}\n      >\n        {'>'}\n      </NavLink>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  buttonsNumbers: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport './App.css';\n\nimport queryString from 'query-string';\nimport { Route, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport getPlanes from './API_Data';\nimport ItemsPerPage from './components/ItemsPerPage';\nimport Pagination from './components/Pagination';\n\nconst getPageNumber = (elementsPerPage, elementsNumber) => {\n  const pageNumber = Math.ceil(elementsNumber / elementsPerPage);\n\n  return pageNumber;\n};\n\nconst getFilteredPerPage = (flights, page, perPage) => {\n  const fromIndex = (page - 1) * perPage;\n  const toIndex = page * perPage;\n\n  const filteredFlights = flights.filter((flight, index) => (\n    index >= fromIndex && index < toIndex));\n\n  return filteredFlights;\n};\n\nconst getButtonsNumbers = pageNumber => (\n  Array.from(Array(pageNumber), (btn, i) => i + 1));\n\nconst getNumbersShownPages = (page, perPage, filteredPages) => `\n  ${(page * perPage) - perPage + 1}\n  - ${(page * perPage) - perPage + filteredPages.length}\n`;\n\nclass App extends React.Component {\n  state = {\n    arrivals: [],\n  };\n\n  async componentDidMount() {\n    const temp = await getPlanes();\n\n    this.setState({\n      arrivals: temp.body.arrival,\n    });\n  }\n\n  onPerPageChange = (event) => {\n    const { value } = event.target;\n\n    this.props.history.push(`/${1}?perpage=${value}`);\n  }\n\n  render() {\n    const { arrivals } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>{arrivals.length} Flights</h1>\n\n        <Route\n          path=\"/:pageId\"\n          exact\n          component={({ match, location }) => {\n            const { pageId = 1 } = match.params;\n            const { perpage = 20 } = queryString.parse(location.search);\n            const perPage = +perpage;\n\n            if (perPage < 3 || perPage > 20) {\n              this.props.history.push(`/${1}?perpage=20`);\n            }\n\n            const pageNumber = getPageNumber(perPage, arrivals.length);\n            const buttonsNumbers = getButtonsNumbers(pageNumber);\n            const filteredPages = getFilteredPerPage(arrivals, pageId, perPage);\n\n            if (pageId > pageNumber && pageNumber > 0) {\n              this.props.history.push(`/${1}`);\n            }\n\n            return (\n              <div>\n                <h3>\n                  number Of Pages:\n                  {pageNumber}\n                </h3>\n\n                <ItemsPerPage\n                  perPage={perPage}\n                  onPerPageChange={this.onPerPageChange}\n                  location={location}\n                />\n\n                <p>\n                  Shown\n                  {getNumbersShownPages(pageId, perPage, filteredPages)}\n                  {' '}\n                  from\n                  {arrivals.length}\n                </p>\n\n                <ul>\n                  {filteredPages.map(arrival => (\n                    <li key={arrival.ID}>\n                      {arrival.airline.en.name}\n                    </li>\n                  ))}\n                </ul>\n\n                <Pagination\n                  buttonsNumbers={buttonsNumbers}\n                  page={+pageId}\n                  perPage={perPage}\n                />\n              </div>\n            );\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nconst AppWithRouter = withRouter(App);\n\nexport default AppWithRouter;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport AppWithRouter from './App';\n\nReactDOM.render(\n  <Router>\n    <AppWithRouter />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}