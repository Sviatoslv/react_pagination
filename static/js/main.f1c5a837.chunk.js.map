{"version":3,"sources":["API_Data.js","components/ItemsPerPage.js","components/Pagination.js","App.js","index.js"],"names":["getPlanes","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","planes","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","apply","this","arguments","ItemsPerPage","perPage","onPerPageChange","react_default","createElement","value","onChange","name","classNames","require","Pagination","page","buttonsNumbers","paginationBtnClass","buttonNumber","pageNum","button","button--pagination","button--active","firstDotsClass","dots","hide","lastDotsClass","length","backClass","button--flip","isDisabled","nextClass","className","react_router_dom","to","concat","filter","index","buttons","map","i","key","App","state","arrivals","event","_event$target","target","_this","props","history","push","setState","defineProperty","temp","body","arrival","elementsPerPage","elementsNumber","_this2","_this$state","pageNumber","Math","ceil","Array","from","btn","getButtonsNumbers","react_router","path","component","_match$params$pageId","match","params","pageId","filteredPages","flights","fromIndex","toIndex","flight","getFilteredPerPage","components_ItemsPerPage","getNumbersShownPages","ID","airline","en","_ref2","_match$params$pageId2","components_Pagination","React","Component","AppWithRouter","withRouter","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f1c5a837.chunk.js","sourcesContent":["const getPlanes = async() => {\n  const url = 'https://api.iev.aero/api/flights/13-06-2019';\n  const planes = await fetch(url);\n\n  return planes.json();\n};\n\nexport default getPlanes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ItemsPerPage = ({ perPage, onPerPageChange }) => (\n  <div>\n    <h3>\n      items per Page:\n      {perPage}\n    </h3>\n\n    <select\n      value={perPage}\n      onChange={onPerPageChange}\n      name=\"perPage\"\n    >\n      <option value=\"3\">3</option>\n      <option value=\"5\">5</option>\n      <option value=\"10\">10</option>\n      <option value=\"20\">20</option>\n    </select>\n  </div>\n);\n\nItemsPerPage.propTypes = {\n  perPage: PropTypes.number.isRequired,\n  onPerPageChange: PropTypes.func.isRequired,\n};\n\nexport default ItemsPerPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst classNames = require('classnames');\n\nconst Pagination = ({ page, buttonsNumbers }) => {\n  const paginationBtnClass = (buttonNumber, pageNum) => (\n    classNames({\n      button: true,\n      'button--pagination': true,\n      'button--active': buttonNumber === pageNum,\n    }));\n\n  const firstDotsClass = classNames({\n    dots: true,\n    hide: page < 4,\n  });\n\n  const lastDotsClass = classNames({\n    dots: true,\n    hide: page > buttonsNumbers.length - 3,\n  });\n\n  const backClass = classNames({\n    button: true,\n    'button--flip': true,\n    isDisabled: page <= 1,\n  });\n\n  const nextClass = classNames({\n    button: true,\n    'button--flip': true,\n    isDisabled: page >= buttonsNumbers.length,\n  });\n\n  return (\n    <div className=\"Pagination\">\n      <NavLink\n        to={page > 1 ? `/${page - 1}` : `/${page}`}\n        name=\"back\"\n        className={backClass}\n      >\n        {'<'}\n      </NavLink>\n\n      <ul className=\"pagination__list\">\n        <li>\n          <NavLink\n            to={`/${buttonsNumbers[0]}`}\n            name={buttonsNumbers[0]}\n            className={paginationBtnClass(\n              buttonsNumbers[0],\n              page,\n              buttonsNumbers.length\n            )}\n          >\n            {buttonsNumbers[0]}\n          </NavLink>\n        </li>\n\n        <li className={firstDotsClass}>...</li>\n\n        {buttonsNumbers\n          .filter((buttonNumber, index, buttons) => (\n            index !== 0\n            && index !== buttons.length - 1\n            && (index + 1 === page\n            || index + 1 === page + 1\n            || index + 1 === page - 1)))\n          .map((buttonNumber, i, buttons) => (\n            <li key={buttonNumber}>\n              <NavLink\n                to={`/${buttonNumber}`}\n                name={buttonNumber}\n                className={paginationBtnClass(\n                  buttonNumber, page, buttons.length\n                )}\n              >\n                {buttonNumber}\n              </NavLink>\n            </li>\n          ))}\n\n        <li className={lastDotsClass}>...</li>\n\n        <li>\n          <NavLink\n            to={`/${buttonsNumbers[buttonsNumbers.length - 1]}`}\n            name={buttonsNumbers[buttonsNumbers.length - 1]}\n            className={paginationBtnClass(\n              buttonsNumbers[buttonsNumbers.length - 1],\n              page,\n              buttonsNumbers.length\n            )}\n          >\n            {buttonsNumbers[buttonsNumbers.length - 1]}\n          </NavLink>\n        </li>\n      </ul>\n\n      <NavLink\n        to={page <= buttonsNumbers.length - 1 ? `/${page + 1}` : `/${page}`}\n        name=\"next\"\n        className={nextClass}\n      >\n        {'>'}\n      </NavLink>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  buttonsNumbers: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport './App.css';\nimport { Route, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport getPlanes from './API_Data';\nimport ItemsPerPage from './components/ItemsPerPage';\nimport Pagination from './components/Pagination';\n\nconst getPageNumber = (elementsPerPage, elementsNumber) => {\n  const pageNumber = Math.ceil(elementsNumber / elementsPerPage);\n\n  return pageNumber;\n};\n\nconst getFilteredPerPage = (flights, page, perPage) => {\n  const fromIndex = (page - 1) * perPage;\n  const toIndex = page * perPage;\n\n  const filteredFlights = flights.filter((flight, index) => (\n    index >= fromIndex && index < toIndex));\n\n  return filteredFlights;\n};\n\nconst getButtonsNumbers = pageNumber => (\n  Array.from(Array(pageNumber), (btn, i) => i + 1));\n\nconst getNumbersShownPages = (page, perPage, filteredPages) => `\n  ${(page * perPage) - perPage + 1}\n  - ${(page * perPage) - perPage + filteredPages.length}\n`;\n\nclass App extends React.Component {\n  state = {\n    arrivals: [],\n    perPage: 20,\n  };\n\n  async componentDidMount() {\n    const temp = await getPlanes();\n\n    this.setState({\n      arrivals: temp.body.arrival,\n    });\n  }\n\n  onPerPageChange = (event) => {\n    const { name, value } = event.target;\n\n    this.props.history.push(`/${1}`);\n\n    this.setState({\n      [name]: +value,\n    });\n  }\n\n  render() {\n    const { perPage, arrivals } = this.state;\n\n    const pageNumber = getPageNumber(perPage, arrivals.length);\n    const buttonsNumbers = getButtonsNumbers(pageNumber);\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>{arrivals.length} Flights</h1>\n\n        <Route\n          path=\"/:pageId?\"\n          component={({ match }) => {\n            const { pageId = 1 } = match.params;\n            const filteredPages = getFilteredPerPage(arrivals, pageId, perPage);\n\n            return (\n              <div>\n                <h3>\n                  number Of Pages:\n                  {pageNumber}\n                </h3>\n\n                <ItemsPerPage\n                  perPage={perPage}\n                  onPerPageChange={this.onPerPageChange}\n                />\n\n                <p>\n                  Shown\n                  {getNumbersShownPages(pageId, perPage, filteredPages)}\n                  {' '}\n                  from\n                  {arrivals.length}\n                </p>\n\n                <ul>\n                  {filteredPages.map(arrival => (\n                    <li key={arrival.ID}>\n                      {arrival.airline.en.name}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            );\n          }}\n        />\n\n        <Route\n          path=\"/:pageId?\"\n          component={({ match }) => {\n            const { pageId = 1 } = match.params;\n\n            return (\n              <Pagination\n                pageNumber={pageNumber}\n                buttonsNumbers={buttonsNumbers}\n                page={+pageId}\n              />\n            );\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }).isRequired,\n};\n\nconst AppWithRouter = withRouter(App);\n\nexport default AppWithRouter;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport AppWithRouter from './App';\n\nReactDOM.render(\n  <Router>\n    <AppWithRouter />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}